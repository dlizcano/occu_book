"0","###############################"
"0","## The function starts here ###"
"0","###############################"
"0","set.seed(24) # Can choose seed of your choice"
"0","# Function definition with set of default values"
"0","data.fn <- function(M = 60, J = 30, mean.occupancy = 0.8, "
"0","                    beta1 = -1.5, beta2 = 0, beta3 = 0, mean.detection = 0.6, "
"0","                    alpha1 = 2, alpha2 = 1, alpha3 = 1.5, show.plot = FALSE){"
"0","# Function to simulate occupancy measurements replicated at M sites during J occasions."
"0","# Population closure is assumed for each site."
"0","# Expected occurrence may be affected by elevation (elev), "
"0","# forest cover (forest) and their interaction."
"0","# Expected detection probability may be affected by elevation, "
"0","# temperature (temp) and their interaction."
"0","# Function arguments:"
"0","#     M: Number of spatial replicates (sites)"
"0","#     J: Number of temporal replicates (occasions)"
"0","#     mean.occupancy: Mean occurrence at value 0 of occurrence covariates"
"0","#     beta1: Main effect of elevation on occurrence"
"0","#     beta2: Main effect of forest cover on occurrence"
"0","#     beta3: Interaction effect on occurrence of elevation and forest cover"
"0","#     mean.detection: Mean detection prob. at value 0 of detection covariates"
"0","#     alpha1: Main effect of elevation on detection probability"
"0","#     alpha2: Main effect of temperature on detection probability"
"0","#     alpha3: Interaction effect on detection of elevation and temperature"
"0","#     show.plot: if TRUE, plots of the data will be displayed; "
"0","#               set to FALSE if you are running simulations."
"0",""
"0","# Create covariates"
"0","elev <- runif(n = M, -1, 1)                         # Scaled elevation"
"0","forest <- runif(n = M, -1, 1)                       # Scaled forest cover"
"0","temp <- array(runif(n = M*J, -1, 1), dim = c(M, J)) # Scaled temperature"
"0",""
"0","# Model for occurrence"
"0","beta0 <- qlogis(mean.occupancy)               # Mean occurrence on link scale"
"0","psi <- plogis(beta0 + beta1*elev + beta2*forest + beta3*elev*forest)"
"0","z <- rbinom(n = M, size = 1, prob = psi)      # Realised occurrence"
"0",""
"0","# Plots"
"0","if(show.plot){"
"0","  par(mfrow = c(2, 2), cex.main = 1)"
"0","  devAskNewPage(ask = TRUE)"
"0","  curve(plogis(beta0 + beta1*x), -1, 1, col = ""red"", frame.plot = FALSE, "
"0","      ylim = c(0, 1), xlab = ""Elevation"", ylab = ""psi"", lwd = 2)"
"0","  plot(elev, psi, frame.plot = FALSE, ylim = c(0, 1), xlab = ""Elevation"", "
"0","     ylab = """")"
"0","  curve(plogis(beta0 + beta2*x), -1, 1, col = ""red"", frame.plot = FALSE, "
"0","      ylim = c(0, 1), xlab = ""Forest cover"", ylab = ""psi"", lwd = 2)"
"0","  plot(forest, psi, frame.plot = FALSE, ylim = c(0, 1), xlab = ""Forest cover"", "
"0","     ylab = """")"
"0","}"
"0",""
"0","# Model for observations"
"0","y <- p <- matrix(NA, nrow = M, ncol = J)# Prepare matrix for y and p"
"0","alpha0 <- qlogis(mean.detection)        # mean detection on link scale"
"0","for (j in 1:J){                         # Generate counts by survey"
"0","   p[,j] <- plogis(alpha0 + alpha1*elev + alpha2*temp[,j] + alpha3*elev*temp[,j])"
"0","   y[,j] <- rbinom(n = M, size = 1, prob = z * p[,j])"
"0","}"
"0",""
"0","# True and observed measures of 'distribution'"
"0","sumZ <- sum(z)                     # Total occurrence (all sites)"
"0","sumZ.obs <- sum(apply(y,1,max))    # Observed number of occ sites"
"0","psi.fs.true <- sum(z) / M          # True proportion of occ. sites in sample"
"0","psi.fs.obs <- mean(apply(y,1,max)) # Observed proportion of occ. sites in sample"
"0",""
"0","# More plots"
"0","if(show.plot){"
"0","  par(mfrow = c(2, 2))"
"0","  curve(plogis(alpha0 + alpha1*x), -1, 1, col = ""red"", "
"0","      main = ""Relationship p-elevation \nat average temperature"", "
"0","      xlab = ""Scaled elevation"", frame.plot = F)"
"0","  matplot(elev, p, xlab = ""Scaled elevation"", "
"0","        main = ""Relationship p-elevation\n at observed temperature"", "
"0","        pch = ""*"", frame.plot = F)"
"0","  curve(plogis(alpha0 + alpha2*x), -1, 1, col = ""red"", "
"0","      main = ""Relationship p-temperature \n at average elevation"", "
"0","      xlab = ""Scaled temperature"", frame.plot = F)"
"0","  matplot(temp, p, xlab = ""Scaled temperature"", "
"0","        main = ""Relationship p-temperature \nat observed elevation"", "
"0","        pch = ""*"", frame.plot = F)"
"0","}"
"0",""
"0","# Output"
"0","return(list(M = M, J = J, mean.occupancy = mean.occupancy, "
"0","            beta0 = beta0, beta1 = beta1, beta2 = beta2, beta3 = beta3, "
"0","            mean.detection = mean.detection, "
"0","            alpha0 = alpha0, alpha1 = alpha1, alpha2 = alpha2, alpha3 = alpha3, "
"0","            elev = elev, forest = forest, temp = temp, "
"0","            psi = psi, z = z, p = p, y = y, sumZ = sumZ, sumZ.obs = sumZ.obs, "
"0","            psi.fs.true = psi.fs.true, psi.fs.obs = psi.fs.obs))"
"0","}"
"0",""
"0","###############################"
"0","## The function ends  here  ###"
"0","###############################"
"0",""
